// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid()) // use uuid for ids publicy exposed
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())

  @@map("users")
}

model Product {
  id         String   @id @default(uuid())
  name       String
  price      Decimal
  min_amount Int?
  created_at DateTime @default(now())
  Order      Order[]

  @@map("products")
}

model Customer {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  document   String    @unique
  address    String
  cep        String
  uf         String
  phone      String
  created_at DateTime  @default(now())
  updated_at DateTime?
  Order      Order[]

  @@map("customers")
}

model Order {
  id           String    @id @default(uuid())
  is_delivery  Boolean
  status       Status
  amount       Int
  form_payment Payment
  total_value  Decimal
  created_at   DateTime  @default(now())
  updated_at   DateTime?

  costumer   Customer @relation(fields: [costumerId], references: [id])
  costumerId String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@map("orders")
}

enum Status {
  CREATED
  WAITING
  IN_PRODUCTION
  WAITING_DELIVERY
  FINISHED
}

enum Payment {
  CASH
  PIX
  CREDIT_CARD
}
